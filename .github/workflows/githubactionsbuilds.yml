name: GitHubActionsBuilds

on: push

jobs:
  generate_version_number:
    runs-on: ubuntu-latest
    outputs:
      build_number: ${{ steps.buildnumber.outputs.build_number }}
    steps:
    - name: Generate build number
      id: buildnumber
      uses: einaregilsson/build-number@v3
      with:
        token: ${{secrets.github_token}}

  build_docker:
    needs: generate_version_number
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: devedse
        password: ${{ secrets.DOCKERHUBTOKEN }}
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
      with:
        image: tonistiigi/binfmt:latest
        platforms: all
    - name: Available platforms
      run: echo ${{ steps.qemu.outputs.platforms }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    - name: Builder instance name
      run: echo ${{ steps.buildx.outputs.name }}
    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}
    - name: Run Buildx
      run: |
        export VERSION=1.0.${{needs.generate_version_number.outputs.build_number}}
        echo Version: $VERSION
        #docker buildx build -f Dockerfile --platform linux/arm64,linux/amd64 -t devedse/dandere2x:${{needs.generate_version_number.outputs.build_number}} -t devedse/dandere2x:latest ${{ github.ref == 'refs/heads/master' && '--push' || '' }} .
        docker buildx build -f Dockerfile --platform linux/amd64 -t devedse/dandere2x:${{needs.generate_version_number.outputs.build_number}} -t devedse/dandere2x:latest ${{ github.ref == 'refs/heads/master' && '--push' || '' }} .
  
  build_windows:
    needs: generate_version_number
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    # - name: Install PyInstaller
    #   run: pip install pyinstaller
    - name: pip install nuitka
      run: pip install nuitka
    - name: Pip install requirements
      run: pip3 install -r src/requirements.txt
    - name: Build to single executable
      run: |
        cd src
        #pyinstaller --onefile main.py
        python -m nuitka --follow-imports --onefile main.py
    - name: ls
      run: ls -R
    - uses: actions/upload-artifact@v3
      with:
        name: dandere2x_windows
        path: src/dist/main.exe

  build_linux:
    needs: generate_version_number
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    # - name: Install PyInstaller
    #   run: pip install pyinstaller
    - name: pip install nuitka
      run: pip install nuitka
    - name: Pip install requirements
      run: pip3 install -r src/requirements.txt
    - name: Build to single executable
      run: |
        cd src
        #pyinstaller --onefile main.py
        python -m nuitka --follow-imports --onefile main.py
    - name: ls
      run: ls -R
    - uses: actions/upload-artifact@v3
      with:
        name: dandere2x_linux
        path: src/dist/main.bin

  release_github:
    needs: [
      generate_version_number,
      build_windows,
      build_linux]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v2
      with:
        path: ./artifacts/

    - name: Display structure of downloaded files
      run: |
        cd ./artifacts/
        ls -R
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: 1.0.${{needs.generate_version_number.outputs.build_number}}
        release_name: 1.0.${{needs.generate_version_number.outputs.build_number}}
        body: |
          ${{ github.event.head_commit.message }}
        draft: false
        prerelease: false
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: 1.0.${{needs.generate_version_number.outputs.build_number}}
        files: |
          ./artifacts/dandere2x_windows/main.exe
          ./artifacts/dandere2x_linux/main.bin
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}